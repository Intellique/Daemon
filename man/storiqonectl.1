.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "storiqonectl 1"
.TH storiqonectl 1 "2018-11-23" "2.3.2" "STORIQONE"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
storiqonectl \- Storiq One daemon control utility
.SS "\s-1SYNOPSIS\s0"
.IX Subsection "SYNOPSIS"
storiqonectl [\s-1COMMAND\s0]([\s-1PARAMETERS\s0])
.SS "\s-1DESCRIPTION\s0"
.IX Subsection "DESCRIPTION"
storiqonectl is the program used to control the storiqone daemon.
.SS "\s-1OPTIONS\s0"
.IX Subsection "OPTIONS"
storiqonectl accepts the following commands :
.PP
\fIapi\fR
.IX Subsection "api"
.PP
display configured \s-1API\s0 keys (used to connect to the storiqone-backend \s-1API\s0). The 'api' command can take additional parameters:
.PP
\-c, \-\-create <name> : create new \s-1API\s0 key
.IX Subsection "-c, --create <name> : create new API key"
.PP
\-h, \-\-help          : show this and exit
.IX Subsection "-h, --help : show this and exit"
.PP
\-l, \-\-list          : list \s-1API\s0 keys (default action)
.IX Subsection "-l, --list : list API keys (default action)"
.PP
\-r, \-\-remove <name> : remove a key
.IX Subsection "-r, --remove <name> : remove a key"
.PP
\fIconfig\fR
.IX Subsection "config"
.PP
Configure the StoriqOne database (as defined in /etc/storiq/storiqone.conf) with the existing storage hardware. To be used only when the storiqoned daemon isn't running.
Run it again in case of changes in the hardware setup (additional tape drives, libraries, etc).
.PP
\fIstart\fR
.IX Subsection "start"
.PP
start up the storiqoned service.
.PP
\fIstatus\fR
.IX Subsection "status"
.PP
returns storiqoned service status in $?.
.PP
\fIstop\fR
.IX Subsection "stop"
.PP
stops the storiqoned service.
.SS "\s-1LICENSE\s0"
.IX Subsection "LICENSE"
Copyright (c) 2018 Intellique
This software is distributed under the Affero \s-1GPL\s0 version 3, see <https://www.gnu.org/licenses/agpl\-3.0.txt>
This is free software: you are free to change and redistribute it.  There is \s-1NO WARRANTY,\s0 to the extent permitted by law.
.SS "\s-1SEE ALSO\s0"
.IX Subsection "SEE ALSO"
\&\fIstoriqoned\fR\|(1).
